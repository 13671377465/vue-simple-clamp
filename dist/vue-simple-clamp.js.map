{"version":3,"file":"vue-simple-clamp.js","sources":["../src/index.js"],"sourcesContent":["function clamp(element, options) {\n  options = options || {}\n\n  var self = this,\n    win = window,\n    opt = {\n      clamp:              options.clamp || 2,\n      useNativeClamp:     typeof(options.useNativeClamp) != 'undefined' ? options.useNativeClamp : true,\n      splitOnChars:       options.splitOnChars || ['.', '-', '–', '—', ' '], //Split on sentences (periods), hypens, en-dashes, em-dashes, and words (spaces).\n      animate:            options.animate || false,\n      truncationChar:     options.truncationChar || '…',\n      truncationHTML:     options.truncationHTML\n    },\n    \n    sty = element.style,\n    originalText = element.innerHTML,\n    \n    supportsNativeClamp = typeof(element.style.webkitLineClamp) != 'undefined',\n    clampValue = opt.clamp,\n    isCSSValue = clampValue.indexOf && (clampValue.indexOf('px') > -1 || clampValue.indexOf('em') > -1),\n    truncationHTMLContainer\n\n    if (opt.truncationHTML) {\n      truncationHTMLContainer = document.createElement('span')\n      truncationHTMLContainer.innerHTML = opt.truncationHTML\n    }\n\n// UTILITY FUNCTIONS __________________________________________________________\n\n  /**\n   * Return the current style for an element.\n   * @param {HTMLElement} elem The element to compute.\n   * @param {string} prop The style property.\n   * @returns {number}\n   */\n  function computeStyle(elem, prop) {\n    if (!win.getComputedStyle) {\n      win.getComputedStyle = function(el, pseudo) {\n        this.el = el\n        this.getPropertyValue = function(prop) {\n          var re = /(\\-([a-z]){1})/g\n          if (prop == 'float') prop = 'styleFloat'\n          if (re.test(prop)) {\n            prop = prop.replace(re, function () {\n              return arguments[2].toUpperCase()\n            })\n          }\n          return el.currentStyle && el.currentStyle[prop] ? el.currentStyle[prop] : null\n        }\n        return this\n      }\n    }\n\n    return win.getComputedStyle(elem, null).getPropertyValue(prop)\n  }\n\n  /**\n   * Returns the maximum number of lines of text that should be rendered based\n   * on the current height of the element and the line-height of the text.\n   */\n  function getMaxLines(height) {\n    var availHeight = height || element.clientHeight,\n        lineHeight = getLineHeight(element)\n\n    return Math.max(Math.floor(availHeight/lineHeight), 0)\n  }\n\n  /**\n   * Returns the maximum height a given element should have based on the line-\n   * height of the text and the given clamp value.\n   */\n  function getMaxHeight(clmp) {\n    var lineHeight = getLineHeight(element)\n    return lineHeight * clmp\n  }\n\n  /**\n   * Returns the line-height of an element as an integer.\n   */\n  function getLineHeight(elem) {\n    var lh = computeStyle(elem, 'line-height')\n    if (lh == 'normal') {\n      // Normal line heights vary from browser to browser. The spec recommends\n      // a value between 1.0 and 1.2 of the font size. Using 1.1 to split the diff.\n      lh = parseInt(computeStyle(elem, 'font-size')) * 1.2\n    }\n    return parseInt(lh)\n  }\n\n\n// MEAT AND POTATOES (MMMM, POTATOES...) ______________________________________\n  var splitOnChars = opt.splitOnChars.slice(0),\n    splitChar = splitOnChars[0],\n    chunks,\n    lastChunk\n  \n  /**\n   * Gets an element's last child. That may be another node or a node's contents.\n   */\n  function getLastChild(elem) {\n    //Current element has children, need to go deeper and get last child as a text node\n    if (elem.lastChild.children && elem.lastChild.children.length > 0) {\n      return getLastChild(Array.prototype.slice.call(elem.children).pop())\n    }\n    //This is the absolute last child, a text node, but something's wrong with it. Remove it and keep trying\n    else if (!elem.lastChild || !elem.lastChild.nodeValue || elem.lastChild.nodeValue == '' || elem.lastChild.nodeValue == opt.truncationChar) {\n      elem.lastChild.parentNode.removeChild(elem.lastChild)\n      return getLastChild(element)\n    }\n    //This is the last child we want, return it\n    else {\n      return elem.lastChild\n    }\n  }\n  \n  /**\n   * Removes one character at a time from the text until its width or\n   * height is beneath the passed-in max param.\n   */\n  function truncate(target, maxHeight) {\n    if (!maxHeight) {return}\n      \n      /**\n       * Resets global variables.\n       */\n    function reset() {\n      splitOnChars = opt.splitOnChars.slice(0)\n      splitChar = splitOnChars[0]\n      chunks = null\n      lastChunk = null\n    }\n    \n    var nodeValue = target.nodeValue.replace(opt.truncationChar, '')\n      \n      //Grab the next chunks\n    if (!chunks) {\n      //If there are more characters to try, grab the next one\n      if (splitOnChars.length > 0) {\n        splitChar = splitOnChars.shift()\n      }\n      //No characters to chunk by. Go character-by-character\n      else {\n        splitChar = ''\n      }\n        \n      chunks = nodeValue.split(splitChar)\n    }\n      \n      //If there are chunks left to remove, remove the last one and see if\n      // the nodeValue fits.\n    if (chunks.length > 1) {\n      // console.log('chunks', chunks)\n      lastChunk = chunks.pop()\n      // console.log('lastChunk', lastChunk)\n      applyEllipsis(target, chunks.join(splitChar))\n    }\n    //No more chunks can be removed using this character\n    else {\n      chunks = null\n    }\n      \n    //Insert the custom HTML before the truncation character\n    if (truncationHTMLContainer) {\n      target.nodeValue = target.nodeValue.replace(opt.truncationChar, '')\n      element.innerHTML = target.nodeValue + ' ' + truncationHTMLContainer.innerHTML + opt.truncationChar\n    }\n\n    //Search produced valid chunks\n    if (chunks) {\n      //It fits\n      if (element.clientHeight <= maxHeight) {\n        //There's still more characters to try splitting on, not quite done yet\n        if (splitOnChars.length >= 0 && splitChar != '') {\n          applyEllipsis(target, chunks.join(splitChar) + splitChar + lastChunk)\n          chunks = null\n        }\n        //Finished!\n        else {\n          return element.innerHTML\n        }\n      }\n    }\n    //No valid chunks produced\n    else {\n      //No valid chunks even when splitting by letter, time to move\n      //on to the next node\n      if (splitChar == '') {\n        applyEllipsis(target, '')\n        target = getLastChild(element)\n        \n        reset()\n      }\n    }\n      \n      //If you get here it means still too big, let's keep truncating\n    if (opt.animate) {\n      setTimeout(function() {\n        truncate(target, maxHeight)\n      }, opt.animate === true ? 10 : opt.animate)\n    }\n    else {\n      return truncate(target, maxHeight)\n    }\n  }\n  \n  function applyEllipsis(elem, str) {\n    elem.nodeValue = str + opt.truncationChar\n  }\n\n\n// CONSTRUCTOR ________________________________________________________________\n\n  if (clampValue == 'auto') {\n    clampValue = getMaxLines()\n  }\n  else if (isCSSValue) {\n    clampValue = getMaxLines(parseInt(clampValue))\n  }\n\n  var clampedText\n  if (supportsNativeClamp && opt.useNativeClamp) {\n    sty.overflow = 'hidden'\n    sty.textOverflow = 'ellipsis'\n    sty.webkitBoxOrient = 'vertical'\n    sty.display = '-webkit-box'\n    sty.webkitLineClamp = clampValue\n\n    if (isCSSValue) {\n      sty.height = opt.clamp + 'px'\n    }\n  } else {\n    var height = getMaxHeight(clampValue)\n\n    if (height <= element.clientHeight) {\n      clampedText = truncate(getLastChild(element), height)\n    }\n  }\n  \n  return {\n    'original': originalText,\n    'clamped': clampedText\n  }\n}\n\nconst hookClamp = (el, binding) => {\n  clamp(el, binding.value)\n}\n\nvar vueSimpleClamp = {}\nconsole.log('真的好用！！！')\nvueSimpleClamp.install = function (Vue) {\n  Vue.directive('clamp', {\n    inserted: hookClamp,\n    componentUpdated: hookClamp\n  })\n}\n\nexport default vueSimpleClamp\n"],"names":["clamp","element","options","win","window","opt","useNativeClamp","splitOnChars","animate","truncationChar","truncationHTML","sty","style","originalText","innerHTML","supportsNativeClamp","webkitLineClamp","clampValue","isCSSValue","indexOf","truncationHTMLContainer","document","createElement","computeStyle","elem","prop","getComputedStyle","el","pseudo","getPropertyValue","re","test","replace","arguments","toUpperCase","currentStyle","getMaxLines","height","availHeight","clientHeight","lineHeight","getLineHeight","Math","max","floor","getMaxHeight","clmp","lh","parseInt","slice","splitChar","chunks","lastChunk","getLastChild","lastChild","children","length","Array","prototype","call","pop","nodeValue","parentNode","removeChild","truncate","target","maxHeight","reset","shift","split","applyEllipsis","join","setTimeout","str","clampedText","overflow","textOverflow","webkitBoxOrient","display","hookClamp","binding","value","vueSimpleClamp","console","log","install","Vue","directive","inserted","componentUpdated"],"mappings":"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"}